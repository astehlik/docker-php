# syntax=docker/dockerfile:1

FROM composer:{{ composerImageTag }} as composer

FROM astehlik/php-base:{{ phpVersion }}

COPY --from=composer /usr/bin/composer /usr/bin/composer

RUN curl -sS https://deb.nodesource.com/gpgkey/nodesource.gpg.key | gpg --dearmor > /usr/share/keyrings/nodesource.gpg \
    && curl -sS https://dl.yarnpkg.com/debian/pubkey.gpg | gpg --dearmor > /usr/share/keyrings/yarn.gpg \
    && . /etc/lsb-release \
    && echo "deb [signed-by=/usr/share/keyrings/nodesource.gpg] https://deb.nodesource.com/node_16.x jammy main" | tee /etc/apt/sources.list.d/nodesource.list \
    && echo "deb [signed-by=/usr/share/keyrings/yarn.gpg] https://dl.yarnpkg.com/debian/ stable main" | tee /etc/apt/sources.list.d/yarn.list \
    && apt-get update -y \
    && apt-get install -y --no-install-recommends \
        php{{ phpVersion }}-cli \
    && apt-get install -y \
        openssh-client \
        mysql-client \
        rsync \
        nodejs \
        yarn \
        parallel \
        wget \
        git \
    && apt-get --purge -y autoremove \
    && apt-get autoclean \
    && apt-get clean \
    && rm -rf /var/lib/apt/lists/*

# Configure default PHP version
RUN update-alternatives --set php /usr/bin/php{{ phpVersion }}

ADD cli/entrypoint.sh /usr/local/bin/docker-php-entrypoint
RUN chmod +x /usr/local/bin/docker-php-entrypoint

ENTRYPOINT ["/usr/local/bin/docker-php-entrypoint"]

CMD ["php","-a"]
